<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.czqu.taskmaster.dao.mapper.AccessLogMapper">
  <resultMap id="BaseResultMap" type="net.czqu.taskmaster.dao.pojo.AccessLog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="app_id" jdbcType="TINYINT" property="appId" />
    <result column="protocol" jdbcType="VARCHAR" property="protocol" />
    <result column="host_name" jdbcType="VARCHAR" property="hostName" />
    <result column="request_uri" jdbcType="VARCHAR" property="requestUri" />
    <result column="params" jdbcType="VARCHAR" property="params" />
    <result column="method" jdbcType="VARCHAR" property="method" />
    <result column="status_code" jdbcType="INTEGER" property="statusCode" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="remote_ip" jdbcType="VARCHAR" property="remoteIp" />
    <result column="user_agent" jdbcType="VARCHAR" property="userAgent" />
    <result column="cost_time" jdbcType="INTEGER" property="costTime" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, app_id, protocol, host_name, request_uri, params, method, status_code, uid, user_name, 
    remote_ip, user_agent, cost_time, time
  </sql>
  <select id="selectByExample" parameterType="net.czqu.taskmaster.dao.example.AccessLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from access_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <if test="example != null and example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from access_log
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    <if test="example != null and example.rows != null">
      <if test="example.offset != null">
        limit ${example.offset}, ${example.rows}
      </if>
      <if test="example.offset == null">
        limit ${example.rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from access_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from access_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from access_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="net.czqu.taskmaster.dao.example.AccessLogExample">
    delete from access_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="net.czqu.taskmaster.dao.pojo.AccessLog">
    insert into access_log (id, app_id, protocol, 
      host_name, request_uri, params, 
      method, status_code, uid, 
      user_name, remote_ip, user_agent, 
      cost_time, time)
    values (#{id,jdbcType=INTEGER}, #{appId,jdbcType=TINYINT}, #{protocol,jdbcType=VARCHAR}, 
      #{hostName,jdbcType=VARCHAR}, #{requestUri,jdbcType=VARCHAR}, #{params,jdbcType=VARCHAR}, 
      #{method,jdbcType=VARCHAR}, #{statusCode,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, 
      #{userName,jdbcType=VARCHAR}, #{remoteIp,jdbcType=VARCHAR}, #{userAgent,jdbcType=VARCHAR}, 
      #{costTime,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="map">
    insert into access_log
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            id,
          </if>
          <if test="record.appId != null">
            app_id,
          </if>
          <if test="record.protocol != null">
            protocol,
          </if>
          <if test="record.hostName != null">
            host_name,
          </if>
          <if test="record.requestUri != null">
            request_uri,
          </if>
          <if test="record.params != null">
            params,
          </if>
          <if test="record.method != null">
            method,
          </if>
          <if test="record.statusCode != null">
            status_code,
          </if>
          <if test="record.uid != null">
            uid,
          </if>
          <if test="record.userName != null">
            user_name,
          </if>
          <if test="record.remoteIp != null">
            remote_ip,
          </if>
          <if test="record.userAgent != null">
            user_agent,
          </if>
          <if test="record.costTime != null">
            cost_time,
          </if>
          <if test="record.time != null">
            time,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            #{record.id,jdbcType=INTEGER},
          </if>
          <if test="record.appId != null">
            #{record.appId,jdbcType=TINYINT},
          </if>
          <if test="record.protocol != null">
            #{record.protocol,jdbcType=VARCHAR},
          </if>
          <if test="record.hostName != null">
            #{record.hostName,jdbcType=VARCHAR},
          </if>
          <if test="record.requestUri != null">
            #{record.requestUri,jdbcType=VARCHAR},
          </if>
          <if test="record.params != null">
            #{record.params,jdbcType=VARCHAR},
          </if>
          <if test="record.method != null">
            #{record.method,jdbcType=VARCHAR},
          </if>
          <if test="record.statusCode != null">
            #{record.statusCode,jdbcType=INTEGER},
          </if>
          <if test="record.uid != null">
            #{record.uid,jdbcType=INTEGER},
          </if>
          <if test="record.userName != null">
            #{record.userName,jdbcType=VARCHAR},
          </if>
          <if test="record.remoteIp != null">
            #{record.remoteIp,jdbcType=VARCHAR},
          </if>
          <if test="record.userAgent != null">
            #{record.userAgent,jdbcType=VARCHAR},
          </if>
          <if test="record.costTime != null">
            #{record.costTime,jdbcType=INTEGER},
          </if>
          <if test="record.time != null">
            #{record.time,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="net.czqu.taskmaster.dao.example.AccessLogExample" resultType="java.lang.Long">
    select count(*) from access_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update access_log
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=INTEGER},
          </if>
          <if test="record.appId != null">
            app_id = #{record.appId,jdbcType=TINYINT},
          </if>
          <if test="record.protocol != null">
            protocol = #{record.protocol,jdbcType=VARCHAR},
          </if>
          <if test="record.hostName != null">
            host_name = #{record.hostName,jdbcType=VARCHAR},
          </if>
          <if test="record.requestUri != null">
            request_uri = #{record.requestUri,jdbcType=VARCHAR},
          </if>
          <if test="record.params != null">
            params = #{record.params,jdbcType=VARCHAR},
          </if>
          <if test="record.method != null">
            method = #{record.method,jdbcType=VARCHAR},
          </if>
          <if test="record.statusCode != null">
            status_code = #{record.statusCode,jdbcType=INTEGER},
          </if>
          <if test="record.uid != null">
            uid = #{record.uid,jdbcType=INTEGER},
          </if>
          <if test="record.userName != null">
            user_name = #{record.userName,jdbcType=VARCHAR},
          </if>
          <if test="record.remoteIp != null">
            remote_ip = #{record.remoteIp,jdbcType=VARCHAR},
          </if>
          <if test="record.userAgent != null">
            user_agent = #{record.userAgent,jdbcType=VARCHAR},
          </if>
          <if test="record.costTime != null">
            cost_time = #{record.costTime,jdbcType=INTEGER},
          </if>
          <if test="record.time != null">
            time = #{record.time,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update access_log
    set id = #{record.id,jdbcType=INTEGER},
      app_id = #{record.appId,jdbcType=TINYINT},
      protocol = #{record.protocol,jdbcType=VARCHAR},
      host_name = #{record.hostName,jdbcType=VARCHAR},
      request_uri = #{record.requestUri,jdbcType=VARCHAR},
      params = #{record.params,jdbcType=VARCHAR},
      method = #{record.method,jdbcType=VARCHAR},
      status_code = #{record.statusCode,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      remote_ip = #{record.remoteIp,jdbcType=VARCHAR},
      user_agent = #{record.userAgent,jdbcType=VARCHAR},
      cost_time = #{record.costTime,jdbcType=INTEGER},
      time = #{record.time,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    update access_log
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.appId != null">
            app_id = #{record.appId,jdbcType=TINYINT},
          </if>
          <if test="record.protocol != null">
            protocol = #{record.protocol,jdbcType=VARCHAR},
          </if>
          <if test="record.hostName != null">
            host_name = #{record.hostName,jdbcType=VARCHAR},
          </if>
          <if test="record.requestUri != null">
            request_uri = #{record.requestUri,jdbcType=VARCHAR},
          </if>
          <if test="record.params != null">
            params = #{record.params,jdbcType=VARCHAR},
          </if>
          <if test="record.method != null">
            method = #{record.method,jdbcType=VARCHAR},
          </if>
          <if test="record.statusCode != null">
            status_code = #{record.statusCode,jdbcType=INTEGER},
          </if>
          <if test="record.uid != null">
            uid = #{record.uid,jdbcType=INTEGER},
          </if>
          <if test="record.userName != null">
            user_name = #{record.userName,jdbcType=VARCHAR},
          </if>
          <if test="record.remoteIp != null">
            remote_ip = #{record.remoteIp,jdbcType=VARCHAR},
          </if>
          <if test="record.userAgent != null">
            user_agent = #{record.userAgent,jdbcType=VARCHAR},
          </if>
          <if test="record.costTime != null">
            cost_time = #{record.costTime,jdbcType=INTEGER},
          </if>
          <if test="record.time != null">
            time = #{record.time,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
    where id = #{record.id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.czqu.taskmaster.dao.pojo.AccessLog">
    update access_log
    set app_id = #{appId,jdbcType=TINYINT},
      protocol = #{protocol,jdbcType=VARCHAR},
      host_name = #{hostName,jdbcType=VARCHAR},
      request_uri = #{requestUri,jdbcType=VARCHAR},
      params = #{params,jdbcType=VARCHAR},
      method = #{method,jdbcType=VARCHAR},
      status_code = #{statusCode,jdbcType=INTEGER},
      uid = #{uid,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      remote_ip = #{remoteIp,jdbcType=VARCHAR},
      user_agent = #{userAgent,jdbcType=VARCHAR},
      cost_time = #{costTime,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectOneByExample" parameterType="net.czqu.taskmaster.dao.example.AccessLogExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from access_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from access_log
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" parameterType="map">
    insert into access_log
    (id, app_id, protocol, host_name, request_uri, params, method, status_code, uid, 
      user_name, remote_ip, user_agent, cost_time, time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=INTEGER}, #{item.appId,jdbcType=TINYINT}, #{item.protocol,jdbcType=VARCHAR}, 
        #{item.hostName,jdbcType=VARCHAR}, #{item.requestUri,jdbcType=VARCHAR}, #{item.params,jdbcType=VARCHAR}, 
        #{item.method,jdbcType=VARCHAR}, #{item.statusCode,jdbcType=INTEGER}, #{item.uid,jdbcType=INTEGER}, 
        #{item.userName,jdbcType=VARCHAR}, #{item.remoteIp,jdbcType=VARCHAR}, #{item.userAgent,jdbcType=VARCHAR}, 
        #{item.costTime,jdbcType=INTEGER}, #{item.time,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    insert into access_log (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id'.toString() == column.value">
          #{item.id,jdbcType=INTEGER}
        </if>
        <if test="'app_id'.toString() == column.value">
          #{item.appId,jdbcType=TINYINT}
        </if>
        <if test="'protocol'.toString() == column.value">
          #{item.protocol,jdbcType=VARCHAR}
        </if>
        <if test="'host_name'.toString() == column.value">
          #{item.hostName,jdbcType=VARCHAR}
        </if>
        <if test="'request_uri'.toString() == column.value">
          #{item.requestUri,jdbcType=VARCHAR}
        </if>
        <if test="'params'.toString() == column.value">
          #{item.params,jdbcType=VARCHAR}
        </if>
        <if test="'method'.toString() == column.value">
          #{item.method,jdbcType=VARCHAR}
        </if>
        <if test="'status_code'.toString() == column.value">
          #{item.statusCode,jdbcType=INTEGER}
        </if>
        <if test="'uid'.toString() == column.value">
          #{item.uid,jdbcType=INTEGER}
        </if>
        <if test="'user_name'.toString() == column.value">
          #{item.userName,jdbcType=VARCHAR}
        </if>
        <if test="'remote_ip'.toString() == column.value">
          #{item.remoteIp,jdbcType=VARCHAR}
        </if>
        <if test="'user_agent'.toString() == column.value">
          #{item.userAgent,jdbcType=VARCHAR}
        </if>
        <if test="'cost_time'.toString() == column.value">
          #{item.costTime,jdbcType=INTEGER}
        </if>
        <if test="'time'.toString() == column.value">
          #{item.time,jdbcType=TIMESTAMP}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>